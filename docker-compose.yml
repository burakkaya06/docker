version: '3'
services:

  graylog:
    build: ./graylog
    tty: true
    volumes:
      - ./graylog/elasticsearch.yml:/etc/elasticsearch/elasticsearch.yml
      - ./graylog/server.conf:/etc/graylog/server/server.conf
    expose:
      - 9000
    ports:
      - 9009:9000
      - 12201:12201
    networks:
      net:
        ipv4_address: ${GRAYLOG_HOST}


  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    container_name: rabbitmq
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: ${RABBITMQ_DEFAULT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBITMQ_DEFAULT_PASS}
      RABBITMQ_DEFAULT_VHOST: ${RABBITMQ_DEFAULT_VHOST}
    ports:
      - ${RABBITMQ_PORT}:15672
      - ${RABBITMQ_PORT2}:5672
    networks:
      net:
        ipv4_address: ${RABBITMQ_HOST}


  adminer:
    image: adminer
    restart: always
    container_name: adminer
    ports:
      - ${ADMINER_PORT}:8080
    networks:
      net:
        ipv4_address: ${ADMINER_HOST}
    logging:
      options:
        max-size: 50m

  elasticsearch:
    container_name: elasticsearch
    image: 'bitnami/elasticsearch:7'
    ports:
      - ${ELASTICSEARCH_PORT}:9200
      - ${ELASTICSEARCH_PORT2}:9300
    volumes:
      - ${ELASTICSEARCH_DATA}:/bitnami/elasticsearch/data
    networks:
      net:
        ipv4_address: ${ELASTICSEARCH_HOST}


  elastichq:
    container_name: elastichq
    image: elastichq/elasticsearch-hq
    restart: always
    environment:
      - HQ_DEFAULT_URL=${ELASTICHQ_DEFAULT_URL}
    ports:
    - ${ELASTICHQ_PORT}:5000
    networks:
      net:
        ipv4_address: ${ELASTICHQ_HOST}
#  redis-commander:
#    container_name: redis-commander
#    hostname: redis-commander
#    build: ./redis-commander
#    restart: always
#    environment:
#    - REDIS_HOST=172.28.1.4
#    - REDIS_PASSWORD=redis
#    ports:
#    - "8081:80"
#    networks:
#      net:
#        ipv4_address: 172.28.1.9

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
      - MONGODB_USER=${MONGODB_USER}
      - MONGODB_PASS=${MONGODB_PASS}
    volumes:
      - './mongo/db:/data/db'
    ports:
      - ${MONGODB_PORT}:27017
    networks:
      net:
        ipv4_address: ${MONGODB_HOST}


  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      PGDATA: /data/postgres
    volumes:
      - './postgres:/data/postgres'
    ports:
      - ${POSTGRES_PORT}:5432
    restart: always
    networks:
      net:
        ipv4_address: ${POSTGRES_HOST}


  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - './pgadmin:/root/.pgadmin'
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    restart: always
    networks:
      net:
        ipv4_address: ${PGADMIN_HOST}
  # node:
  #   build: ./nodeServer
  #   container_name: node
  #   restart: always
  #   volumes:
  #     - './nodeServer:/var/www/app'
  #   networks:
  #     net:
  #       ipv4_address: 172.28.1.5
  #   ports:
  #     - '3000:3000'


  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    networks:
      net:
        ipv4_address: ${REDIS_HOST}
    volumes:
      - './etc/redis.conf:/usr/local/etc/redis/redis.conf'
    environment:
      - REDIS_DEFAULT_PASSWORD=${REDIS_PASSWORD}
      - MASTER_DEFAULT_PASSWORD=${REDIS_PASSWORD}
    ports:
      - '6379:6379'

  db:
    image: 'mariadb:latest'
    container_name: mariadb
    restart: always
    networks:
      net:
        ipv4_address: ${MYSQL_HOST}
    volumes:
      - './mysql/initdb/:/docker-entrypoint-initdb.d'
      - './mysql/data/:/var/lib/mysql'
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
      - MYSQL_DATABASE=${MYSQL_DATABASE}
      - MYSQL_USER=${MYSQL_USER}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD}
    ports:
      - ${MYSQL_PORT}:3306


  phpmyadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: always
    networks:
      net:
        ipv4_address: ${PHPMYADMIN_HOST}
    environment:
      PMA_ARBITRARY: 1
      MYSQL_USER: ${MYSQL_USER}
      MYSQL_PASSWORD: ${MYSQL_PASSWORD}
      MYSQL_ROOT_PASSWORD: ${MYSQL_PASSWORD}
    ports:
      - ${PHPMYADMIN_PORT}:80
    links:
      - 'db:db'


#  server:
#    build: ./server
#    container_name: lemp
#    restart: always
#    networks:
#      net:
#        ipv4_address: 172.28.1.1
#    links:
#      - 'db:db'
#    ports:
#      - '80:80'
#      - '443:443'
#    volumes:
#      - './etc/nginx/:/etc/nginx/sites-enabled/'
#      - './etc/php-fpm.conf:/etc/php/7.2/fpm/php-fpm.conf'
#      - './etc/supervisord.conf:/etc/supervisor/supervisord.conf'
#      - './sites/:/var/www/html/'
#      - './logs/:/var/log/nginx/'
#      - './Ssl/:/root/Ssl/'


  httpd:
    build: ./httpd
    container_name: httpd
    tty: true
    restart: always
    tty: true
    networks:
      net:
        ipv4_address: ${APACHE_HOST}
    links:
      - db
      - php56
      - php70
      - php71
      - php72
    ports:
      - ${APACHE_PORT}:80
      - ${APACHE_PORT2}:443
    volumes:
      - ${PROJECT_DEFAULT_PATH}:/var/www/html
      - ${APACHE_SITES_ENABLED}:/etc/apache2/sites-enabled

  nginx:
    build: ./nginx
    container_name: nginx
    restart: always
    networks:
      net:
        ipv4_address: ${NGINX_HOST}
    links:
      - 'db:db'
      - php56
      - php70
      - php71
      - php72
    ports:
      - ${NGINX_PORT}:80
      - ${NGINX_PORT2}:443
    volumes:
      - ${NGINX_CONF_PATH}:/etc/nginx/conf.d/
      - ${PROJECT_DEFAULT_PATH}:/var/www/html/
      - './logs/:/var/log/nginx/'
      - ${NGINX_SSL_PATH}:/root/Ssl/


  php72:
    build: ./php72
    tty: true
    container_name: php72
    restart: always
    expose:
      - 9000
    volumes:
      - ${PROJECT_DEFAULT_PATH}:/var/www/html/
      - /etc/hosts:/etc/hosts
    networks:
      net:

  php70:
    build: ./php70
    tty: true
    container_name: php70
    restart: always
    expose:
      - 9000
    volumes:
      - ${PROJECT_DEFAULT_PATH}:/var/www/html/
    networks:
      net:
  php71:
    build: ./php71
    tty: true
    container_name: php71
    restart: always
    expose:
      - 9000
    volumes:
      - ${PROJECT_DEFAULT_PATH}:/var/www/html/
    networks:
      net:

  php56:
    build: ./php56
    tty: true
    container_name: php56
    restart: always
    expose:
      - 9000
    volumes:
      - ${PROJECT_DEFAULT_PATH}:/var/www/html/
    networks:
      net:


networks:
    net:
      ipam:
        driver: default
        config:
          - subnet: 172.28.0.0/16
volumes:
  elasticsearch_data:
    driver: local
