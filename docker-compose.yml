version: '3'
services:

  rabbitmq:
    image: rabbitmq:3-management
    restart: always
    container_name: rabbitmq
    environment:
      RABBITMQ_ERLANG_COOKIE: "SWQOKODSQALRPCLNMEQG"
      RABBITMQ_DEFAULT_USER: "rabbitmq"
      RABBITMQ_DEFAULT_PASS: "rabbitmq"
      RABBITMQ_DEFAULT_VHOST: "/"
    ports:
      - "15672:15672"
      - "5672:5672"
    networks:
      net:
        ipv4_address: 172.28.1.14


  adminer:
    image: adminer
    restart: always
    container_name: adminer
    ports:
      - "3000:8080"
    networks:
      net:
        ipv4_address: 172.28.1.12
    logging:
      options:
        max-size: 50m

  elasticsearch:
    container_name: elasticsearch
    image: 'bitnami/elasticsearch:7'
    ports:
      - '9200:9200'
      - '9300:9300'
    volumes:
      - 'elasticsearch_data:/bitnami/elasticsearch/data'
    networks:
      net:
        ipv4_address: 172.28.1.11


  elastichq:
    container_name: elastichq
    image: elastichq/elasticsearch-hq
    restart: always
    environment:
      - "HQ_DEFAULT_URL=http://172.28.1.11:9200"
    ports:
    - "5000:5000"
    networks:
      net:
        ipv4_address: 172.28.1.10
#  redis-commander:
#    container_name: redis-commander
#    hostname: redis-commander
#    build: ./redis-commander
#    restart: always
#    environment:
#    - REDIS_HOST=172.28.1.4
#    - REDIS_PASSWORD=redis
#    ports:
#    - "8081:80"
#    networks:
#      net:
#        ipv4_address: 172.28.1.9

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: always
    environment:
      - MONGO_DATA_DIR=/data/db
      - MONGO_LOG_DIR=/dev/null
      - MONGODB_USER="user"
      - MONGODB_PASS="pass"
    volumes:
      - './mongo/db:/data/db'
    ports:
      - '27017:27017'
    networks:
      net:
        ipv4_address: 172.28.1.8


  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-postgres}
      PGDATA: /data/postgres
    volumes:
      - './postgres:/data/postgres'
    ports:
      - '5432:5432'
    restart: always
    networks:
      net:
        ipv4_address: 172.28.1.7


  pgadmin:
    image: dpage/pgadmin4
    container_name: pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-pgadmin@pgadmin.org}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
    volumes:
      - './pgadmin:/root/.pgadmin'
    ports:
      - '${PGADMIN_PORT:-5050}:80'
    restart: always
    networks:
      net:
        ipv4_address: 172.28.1.6
  # node:
  #   build: ./nodeServer
  #   container_name: node
  #   restart: always
  #   volumes:
  #     - './nodeServer:/var/www/app'
  #   networks:
  #     net:
  #       ipv4_address: 172.28.1.5
  #   ports:
  #     - '3000:3000'


  redis:
    image: redis:alpine
    container_name: redis
    restart: always
    networks:
      net:
        ipv4_address: 172.28.1.4
    volumes:
      - './etc/redis.conf:/usr/local/etc/redis/redis.conf'
    environment:
      - REDIS_DEFAULT_PASSWORD=redis
      - MASTER_DEFAULT_PASSWORD=redis
    ports:
      - '6379:6379'

  db:
    image: 'mariadb:latest'
    container_name: mariadb
    restart: always
    networks:
      net:
        ipv4_address: 172.28.1.3
    volumes:
      - './mysql/initdb/:/docker-entrypoint-initdb.d'
      - './mysql/data/:/var/lib/mysql'
    environment:
      - MYSQL_ROOT_PASSWORD=root
      - MYSQL_DATABASE=root
      - MYSQL_USER=root
      - MYSQL_PASSWORD=root
    ports:
      - '3306:3306'


  phpmyadmin:
    image: phpmyadmin/phpmyadmin:fpm-alpine
    container_name: phpmyadmin
    restart: always
    networks:
      net:
        ipv4_address: 172.28.1.2
    environment:
      PMA_ARBITRARY: 1
      MYSQL_USER: root
      MYSQL_PASSWORD: root
      MYSQL_ROOT_PASSWORD: root
    ports:
      - '8088:80'
    links:
      - 'db:db'


#  server:
#    build: ./server
#    container_name: lemp
#    restart: always
#    networks:
#      net:
#        ipv4_address: 172.28.1.1
#    links:
#      - 'db:db'
#    ports:
#      - '80:80'
#      - '443:443'
#    volumes:
#      - './etc/nginx/:/etc/nginx/sites-enabled/'
#      - './etc/php-fpm.conf:/etc/php/7.2/fpm/php-fpm.conf'
#      - './etc/supervisord.conf:/etc/supervisor/supervisord.conf'
#      - './sites/:/var/www/html/'
#      - './logs/:/var/log/nginx/'
#      - './Ssl/:/root/Ssl/'


  httpd:
    build: ./httpd
    container_name: httpd
    restart: always
    networks:
      net:
        ipv4_address: 172.28.1.13
    links:
      - db
      - php56
      - php70
      - php71
      - php72
    ports:
      - '88:80'
      - '4433:443'
    volumes:
      - './sites:/var/www/html'
      - './httpd/sites-enabled:/etc/apache2/sites-enabled'

  nginx:
    build: ./nginx
    container_name: nginx
    restart: always
    networks:
      net:
        ipv4_address: 172.28.1.1
    links:
      - 'db:db'
      - php56
      - php70
      - php71
      - php72
    ports:
      - '80:80'
      - '443:443'
    volumes:
      - './etc/nginx/:/etc/nginx/conf.d/'
      - './sites/:/var/www/html/'
      - './logs/:/var/log/nginx/'
      - './Ssl/:/root/Ssl/'


  php72:
    build: ./php72
    tty: true
    container_name: php72
    restart: always
    expose:
      - 9000
    volumes:
      - './sites/:/var/www/html/'
    networks:
      net:

  php70:
    build: ./php70
    tty: true
    container_name: php70
    restart: always
    expose:
      - 9000
    volumes:
      - './sites/:/var/www/html/'
    networks:
      net:
  php71:
    build: ./php71
    tty: true
    container_name: php71
    restart: always
    expose:
      - 9000
    volumes:
      - './sites/:/var/www/html/'
    networks:
      net:

  php56:
    build: ./php56
    tty: true
    container_name: php56
    restart: always
    expose:
      - 9000
    volumes:
      - './sites/:/var/www/html/'
    networks:
      net:


networks:
    net:
      ipam:
        driver: default
        config:
          - subnet: 172.28.0.0/16
volumes:
  elasticsearch_data:
    driver: local